#############################################################################
#
# MCAFEE CONFIDENTIAL
# Copyright Â©2018 McAfee, LLC
#
# The source code contained or described herein and all documents related
# to the source code ("Material") are owned by McAfee or its
# suppliers or licensors. Title to the Material remains with McAfee
# or its suppliers and licensors. The Material contains trade
# secrets and proprietary and confidential information of McAfee or its
# suppliers and licensors. The Material is protected by worldwide copyright
# and trade secret laws and treaty provisions. No part of the Material may
# be used, copied, reproduced, modified, published, uploaded, posted,
# transmitted, distributed, or disclosed in any way without McAfee's prior
# express written permission.
#
# No license under any patent, copyright, trade secret or other intellectual
# property right is granted to or conferred upon you by disclosure or
# delivery of the Materials, either expressly, by implication, inducement,
# estoppel or otherwise. Any license under such intellectual property rights
# must be express and approved by McAfee in writing.
#
##############################################################################

##############################################################################
#
# Setup the environment required for SHGW to function for Lantiq platform
#
# Date			: 9/May/2016
#
#	Notes:
#		SHGW_ERROR_FILE has to be defined by the calling shell script
#
##############################################################################

. /etc/shgw/shgw.constants
. /etc/shgw/shgw.errno

#
# Retreive the WAN inteface
fn_get_wan_iface() {
	${ECHO} "ppp0.1"
}

fn_retry_query_upto_five_times() {
        local _cmd=$1
        local _db=$2
        local _ecode=$3
        local _sleep_time=$4
        QUERY_OUTPUT=""
        COUNT=1
        while [ $COUNT -lt $SQL_FAILURE_RETRY_COUNT ]; do
         QUERY_OUTPUT=$(${ECHO} ${_cmd} | ${SQLCIPHER} ${_db})
                if [ $? -eq 0 ]; then
                        break
                fi
                sleep ${_sleep_time}
                COUNT=$((${COUNT} + 1))
        done
        if [ $COUNT -eq $SQL_FAILURE_RETRY_COUNT ]; then
                fn_err_exit $_ecode
        fi
}

# Retreive the LAN inteface
fn_get_lan_ifaces() {
	${ECHO} "br0"
}

fn_run_until_failure() {
	while true; do
		$1 > /dev/null 2>&1
		if [ $? -ne 0 ]; then
			break
		fi
	done
}
