CREATE TABLE if not exists shgw_config_store(key UNIQUE, value);

INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('version',					'');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_discovery_time_interval',		'86400');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_inactivity_timeout',			'300');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_upload_interval',			'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_fp_interval',			'10');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_fp_upload_interval',			'120');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_fp_upload_retry_interval',		'30');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_fp_timeout',				'30');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_fp_probes',				'["dhcp","bonjour","ping","upnp"]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_fp_ua_count',		'30');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('fp_ua_packet_count',		'10');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_discovery_log_level',		'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_discovery_protocols',		'["dhcp","arp","ndp"]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('device_block_enable',			'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('upnp_multicast_time_interval',		'60');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('upnp_multicast_max_send_count',		'5');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('lan_interfaces',					'["l2sd0.2"]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('potential_upload_triggers',			'["newDeviceDiscovery","periodic","ipChange","deviceStatusChange"]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('shg_ttl',							'120');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('policy_control_enable',				'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('inbound_security_enable',				'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('policy_cache_enable',				'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('dns_cache_enable',				'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('policy_cache_max_domains',				'1024');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('policy_cache_load_factor',				'10');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('reverse_cache_scale',			'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('devcache_timeout',				'86400');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('ttl_for_local_domain',			'300');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('local_http_domain',				'["shgw.router"]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('max_supported_udp_payload',			'1024');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('potential_edns_ports',			'-1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('dns_server_port',				'53');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('dns_server_ip',				'8.8.8.8');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('shgw_dns_retry_time',			'5');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('edns_server_port',				'-1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('potential_edns_server_ips',			'-1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('edns_server_ip',				'-1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('dns_request_port',				'3130');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('dnsproxy_log_level',			'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('dnsproxy_ipset_ttl_offset',                 '120');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('edns_policy_response_timeout',		'2000');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('dns_isp_response_timeout',			'3000');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('stats_timer_interval',			'3600');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('dynamic_stats_timer_interval',			'600');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('dynamic_stats_collection_delta',			'60');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('model_number',				'__SHGW_CI_MODEL__');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('serial_number',				'__SHGW_CI_SERIAL__');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('app_key',					'E8341CF2DE42488392A1E8B7411F5C2C');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('shared_key',				'Dnb8Ztd+VJCnZzt3l6Bf2BO+FRSkW4wR98cNMS9o7wQ=');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('csp_country_code',				'in');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('csp_log_level',				'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('csp_locale',				'en_US');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('csp_affid',					'__SHGW_CI_AFFID__');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('secret',					'__SHGW_CI_SECRET__');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('secret_indices',					'[268,296,439,763,259,956,795,58,47,538,51,562,50,278,107,81,43,464,1118,181,608,758,59,19,819,922,319,560,111,520,1088,947,626,997,882,946,629,131,387,638,569,594,488,177,555,991,725,3,74,1025,92,1132,1058,1019,824,435,753,823,1074,141,798,825,838,409,622,688,578,645,256,998,220,878,343,983,563,151,279,15,270,793,641,849,1020,307,833,994,189,385,969,323,229,1132,875,410,1126,596,944,163,964,905]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('router_reset',				'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('comm_mgr_log_level',			'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('edns_cm_query_interval',			'60');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('shgw_stop_performed',			'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('is_subscription_valid',				'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('httpd_port',				'8080');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('httpd_interfaces',				'[]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('wlan_interfaces',				'[]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('httpd_log_level',				'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('File_name',					'/var/.shgw/shgw.log');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('File_size',					'524288');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('Rotate_limit',				'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('Rotate_strategy',				'delete');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('Sensitivity_level',				'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('whitelisted_domains',			'[]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('redirector_map',				'[]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('shp_domains',				'[]');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('whitelisted_domain_epoch',			'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('whitelisted_domain_ttl',			'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('whitelisted_domain_etag',			'default');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('tld_epoch',					'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('tld_ttl',					'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('tld_etag',					'default');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('upload_debug_duration',					'300');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('botnet_ip_epoch',					'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('botnet_ip_ttl',					'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('botnet_ip_etag',					'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('botnet_ip_enable',					'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('certs_epoch',					'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('certs_ttl',					'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('certs_etag',					'default');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('certs_retry_count',					'3');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('fpi_devpolicy_map_epoch',			'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('fpi_devpolicy_map_ttl',			'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('fpi_devpolicy_map_etag',			'default');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('limit_ipv6_address',					'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('colld_log_level',				'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('colld_threshold_samples',				'262144');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('colld_threshold_period',				'60');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('colld_auth_token',					'');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('colld_max_upload_retry_count',		'3');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('colld_upload_retry_interval',		'60');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('colld_delay_timer',					'30');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('colld_vflow_port', '4739');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('botnet_throttle_interval',				'120');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('botnet_notif_retry_limit',				'5');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('botnet_notif_retry_interval',			'12');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('hard_blocked_devices',			'{}');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('cmd_js_ping_limit',						'10');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('colld_ingestion_enable',					'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('primary_cert_store_path',					'/rom/etc/shgw/cloud_cert.pem');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('secondary_cert_store_path',					'/etc/shgw/cloud_cert.pem');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('fpi_log_level',					'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('fpi_notification_dedup',					'86400');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('fpi_mnl_bind_queue_no',					'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('fpi_max_no_packets_per_session',					'15');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('fpi_oscp_req_timeout',					'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('fpi_enable',					'1');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('cURLIndependentTimeout',					'300');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('num_comm_mgr_ping_retries',					'2');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('num_cm_isp_ping_retries',					'0');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('comm_mgr_pod_check_window_size',				'5');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('comm_mgr_isp_ping_domain',					'www.google.com');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('backoff_max_interval',					'240');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('backoff_max_retry',					'30');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('backoff_base',					'4');
INSERT OR IGNORE INTO shgw_config_store(key, value) VALUES('backoff_modulus',					'3');

CREATE TABLE IF NOT EXISTS csp_service_discovery(service TEXT PRIMARY KEY,primary_url TEXT,secondary_url TEXT,ttl TEXT);
CREATE TABLE IF NOT EXISTS csp_enrollment_data(client_id TEXT PRIMARY KEY,nonce TEXT,ttl TEXT);
CREATE TABLE IF NOT EXISTS device_properties_store(dev_id TEXT PRIMARY KEY,swpg_status INTEGER,swpg_expiry INTEGER, is_excluded INTEGER,fpi_policies TEXT);
CREATE TABLE IF NOT EXISTS policy_definitions_store(name TEXT,version INTEGER,module TEXT,priority INTEGER,definition TEXT,PRIMARY KEY ( name, version ) );


